---
- name: Add necessary repositories
  command:
    dnf config-manager --add-repo "{{item.url}}"
  with_items: "{{repos}}"

- name: Update package cache
  dnf: update_cache=yes

- name: Install packages
  dnf:
    name: "{{packages}}"
    state: latest

- name: Install additional packages
  dnf:
    name: '{{additional_packages if install_additional else ""}}'
    state: latest

- name: Install pip
  command:
    easy_install pip

# TODO: Replace above block with below code once
# https://github.com/ansible/ansible/pull/39073 merged
# easy_install:
#   name: pip
#   state: latest

- name: Make necessary directories
  file:
    path: "{{item.name}}"
    state: directory
    owner: "{{item.user}}"
    group: "{{item.group}}"
  become: true
  with_items: "{{directories}}"

- name: Install patched fonts
  get_url:
    url: "{{nerdfonts_base}}/tree/master/patched-fonts/{{item}}"
    dest: "~/.local/share/fonts/{{item}}.otf"
  with_items: "{{nerdfonts}}"
  become: true
  become_user: "{{primary_user}}"

- name: Pull down git repositories
  git:
    repo: "{{item.url}}"
    dest: "{{item.dest}}/{{item.name}}"
  with_items: "{{git_repos}}"
  become: true
  become_user: "{{primary_user}}"

- name: Setup config files
  file:
    state: link
    src: "~/development/.files/{{item}}"
    dest: "~/{{item}}"
    force: 'yes'
  with_items: "{{config_files}}"
  become: true
  become_user: "{{primary_user}}"

- name: Install vim-plug
  get_url:
    url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    dest: "~/.vim/autoload/plug.vim"
  become: true
  become_user: "{{primary_user}}"

- name: Install Python 3.7.1
  shell:
    . ~/.bashrc && ~/.pyenv/bin/pyenv install 3.7.1
  become: true
  become_user: "{{primary_user}}"

- name: Copy pip requirements
  copy:
    src: requirements.txt
    dest: /tmp

- name: Install pip requirements
  pip:
    requirements: /tmp/requirements.txt

# - name: Install NVM
#   shell: >
#     curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash
#   args:
#     creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"
#   become: true
#   become_user: "{{primary_user}}"
# 
# - name: Check if node installed
#   shell:
#     . ~/.bashrc && nvm ls stable
#   register: node_bin
#   become: true
#   become_user: "{{primary_user}}"
# 
# - name: Install Node
#   shell:
#     . ~/.bashrc && nvm install stable
#   when: node_bin.rc != 0 
#   become: true
#   become_user: "{{primary_user}}"
